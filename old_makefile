# assemblage de boot.s
# i686-elf-as boot.s -o boot.o
#
# compilation de kernel.c
# i686-elf-gcc -c noyau.c -o noyau.o -std = gnu99 -ffreestanding -O2 -Wall -Wextra
#
# compilation du noyau avec les 3 fichiers
# i686-elf-gcc -T linker.ld -o myos.bin -ffreestanding -O2 -nostdlib -march=i386 boot.o kernel.o -lgcc

#ifndef MVOUI
#    $(error NOT IN VM, MVOUI is undef)
#endif

# Variables de compilation
CC = sudo i686-elf-gcc
AS = sudo i686-elf-as
LD = sudo i686-elf-gcc
CFLAGS = -std=gnu99 -g -gsplit-dwarf -ffreestanding -O2 -Wall -Wextra -march=i386 -fno-builtin -fno-exceptions -fno-stack-protector -nostdlib -nodefaultlibs
ASFLAGS = 
LDFLAGS = -T linker.ld -g -ffreestanding -O2 -nostdlib -lgcc -march=i386 -fno-builtin -fno-exceptions -fno-stack-protector -fno-rtti -nostdlib -nodefaultlibs

SRC = 	kernel.c \
	ft_printk.c \
	gdt.c \
	keyboard.c \

OBJ = 	boot.o \
	kernel.o \
	ft_printk.o \
	gdt.o \
	gdt_load.o \
	gdt_verify.o \
	keyboard.o \
	

EXEC = myos.bin

# Cible par défaut
all: $(EXEC)

# Compilation de l'assembleur

gdt.o: gdt.c kernel.h
	@echo "Compiling gdt.c..."
	$(CC) $(CFLAGS) -c gdt.c -o gdt.o
	@echo

gdt_verify.o: gdt_verify.s
	@echo "Assembling gdt_verify.s..."
	$(AS) gdt_verify.s -o gdt_verify.o
	@echo

gdt_load.o: gdt_load.s
	@echo "Assembling gdt_load.s..."
	$(AS) gdt_load.s -o gdt_load.o
	@echo

boot.o: boot.s
	@echo "Assembling boot.s..."
	$(AS) boot.s -o boot.o
	@echo

# Compilation des fichiers C
keyboard.o: keyboard.c kernel.h
	@echo "Compiling keyboard.c..."
	$(CC) $(CFLAGS) -c keyboard.c -o keyboard.o
	@echo

kernel.o: kernel.c kernel.h
	@echo "Compiling kernel.c..."
	$(CC) $(CFLAGS) -c kernel.c -o kernel.o
	@echo


ft_printk.o: ft_printk.c kernel.h
	@echo "Compiling ft_printk.c..."
	$(CC) $(CFLAGS) -c ft_printk.c -o ft_printk.o
	@echo


# Édition des liens pour créer l'image du noyau
$(EXEC): $(OBJ)
	@echo "Linking..."
	$(LD) $(LDFLAGS) -o $(EXEC) $(OBJ)
	@echo


# Nettoyage des fichiers générés
clean:
	@echo "Cleaning up..."
	sudo rm -f $(OBJ) $(EXEC)
	@echo


# Phony targets
.PHONY: all clean


